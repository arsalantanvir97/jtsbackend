let cors,express,dotenv,logger,connectDB,authRoutes,pageRoutes,multer,fileFilter,fileStorage;_1da‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_1da‍.w("express",[["default",["express"],function(v){express=v}]]);_1da‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_1da‍.w("morgan",[["default",["logger"],function(v){logger=v}]]);_1da‍.w("./config/db.js",[["default",["connectDB"],function(v){connectDB=v}]]);_1da‍.w("./routes/authRoutes.js",[["default",["authRoutes"],function(v){authRoutes=v}]]);_1da‍.w("./routes/pageRoutes.js",[["default",["pageRoutes"],function(v){pageRoutes=v}]]);_1da‍.w("multer",[["default",["multer"],function(v){multer=v}]]);_1da‍.w("./multer",[["fileFilter",["fileFilter"],function(v){fileFilter=v}],["fileStorage",["fileStorage"],function(v){fileStorage=v}]]);










dotenv.config()

connectDB()
const app = express()
app.use(cors())
app.options('*', cors())
app.use(express.json())
app.use(logger('dev'))

app.use(
  multer({
    storage: fileStorage,
    fileFilter: fileFilter,
  }).fields([
    {
      name: '_image',
      maxCount: 1,
    },
  ])
)

app.use('/api/auth', authRoutes)
app.use('/api/page', pageRoutes)

app.get('/', (req, res) => {
  res.send('API is running....')
})

app.listen(5000, console.log('Server running on port 5000'))
